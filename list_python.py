# -*- coding: utf-8 -*-
"""List Questions Python Assignment-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h8bgp--anCgq8t3IbdZmcFRVTpPuSh_X
"""

#Q1. Write a Program to interchange first and last elements in a list

Mak2001 = [1, 2, 3, 4, 5]
Mak2001[0], Mak2001[-1] = Mak2001[-1], Mak2001[0]
print(Mak2001)

#Q2. Program to swap two elements in a list

Mak2001 = [10, 20, 30, 40, 50]
pos1, pos2 = 2, 4
Mak2001[pos1], Mak2001[pos2] = Mak2001[pos2], Mak2001[pos1]
print(Mak2001)

#Q3. Swap elements in String list

Mak2001 = ["Manisha", "Makwana", "Delhi", "AAFT"]

Swap_result = [sub.replace('M', '-').replace('A', 'N').replace('-', 'T') for sub in Mak2001]

print (str(Swap_result))

#Q4. Ways to find length of list

Mak2001 = ["Manisha", "Makwana", "Delhi", "AAFT"]
print(len(Mak2001))

#Q5. Maximum of two numbers in Python

Mak2001 = [10, 20]
print(max(Mak2001))

#Q6. Minimum of two numbers in Python

Mak2001 = [10, 20]
print(min(Mak2001))

#Q7. Ways to check if element exists in list

Mak2001 = [1, 2, 3, 4, 5]
if 4 in Mak2001:
    print("Element exists in the list")
else:
    print("Element does not exist")

#Q8. Different ways to clear a list in Python

# Clear Method
Mak2001 = [1, 2, 3, 4, 5]
Mak2001.clear()
print(Mak2001)

# Del Method
Mak2001 = [1, 2, 3, 4, 5]
del Mak2001[:]
print(Mak2001)

# *=0
Mak2001 = [1, 2, 3, 4, 5]
Mak2001 *= 0
print(Mak2001)

# Re-Initialization
Mak2001 = [1, 2, 3, 4, 5]
Mak2001 = []
print(Mak2001)

#Q9. Reversing a List

Mak2001 = ["Manisha", "Makwana", "Delhi", "AAFT"]
Mak2001.reverse()
print(Mak2001)

#Q10. Cloning or Copying a list

Mak2001 = ["Manisha", "Makwana", "Delhi", "AAFT"]
Mak2001_2 = Mak2001.copy()
print(Mak2001_2)

#Q11. Count occurrences of an element in a list

Mak2001 = [1, 2, 3, 2, 5]
print(Mak2001.count(2))

#Q12. Program to find sum and average of List in Python

Mak2001 = [1, 2, 3, 4, 5]
count = sum(Mak2001)
avg = count/len(Mak2001)

print("sum = ", count)
print("average = ", avg)

#Q13. Sum of number digits in List

Mak2001 = [11, 22, 33, 44, 55]
Mak2002 = []
for elem in Mak2001:
   sum_val = 0
   for digit in str(elem):
      sum_val += int(digit)
   Mak2002.append(sum_val)
print(Mak2002)

#Q14. Multiply all numbers in the list

def mul_list(Mak2001) :

    number = 1
    for i in Mak2001:
         number = number * i
    return number

Mak2001 = [1, 2, 3, 4, 5]
print(mul_list(Mak2001))

#Q15. Program to find smallest number in a list

Mak2001 = [1, 2, 3, 4, 5]
print(min(Mak2001))

#Q16. Program to find largest number in a list

Mak2001 = [1, 2, 3, 4, 5]
print(max(Mak2001))

#Q17. Program to find second largest number in a list

def find_second_largest(Mak2001):
    return sorted(set(Mak2001))[-2]

Mak2001 = [1, 2, 3, 4, 5]
print(find_second_largest(Mak2001))

#Q18. Program to print even numbers in a list

Mak2001 = [1, 2, 3, 4, 5]
Mak2001 = [num for num in Mak2001 if num % 2 == 0]
print(Mak2001)

#Q19. Program to print odd numbers in a List

Mak2001 = [1, 2, 3, 4, 5]
Mak2001 = [num for num in Mak2001 if num % 2 == 1]
print(Mak2001)

#Q20. Program to print all even numbers in a range

start, end = 1, 20
for num in range(start, end + 1):
   if num % 2 == 0:
      print(num, end = " ")

#Q21. Program to print all odd numbers in a range

start, end = 1, 20
for num in range(start, end + 1):
   if num % 2 != 0:
      print(num, end = " ")

#Q22. Program to count Even and Odd numbers in a List


Mak2001 = [10, 20, 3, 40, 5,]
even_count, odd_count = 0, 0
for num in Mak2001:

   if num % 2 == 0:
      even_count += 1

   else:
      odd_count += 1
print("Even numbers : ", even_count)
print("Odd numbers : ", odd_count)

#Q23. Program to print positive numbers in a list

Mak2001 = [2,-3,4,5,-6,7]

def print_positive_numbers(Mak2001):

  for num in Mak2001:
    if num > 0:
      print(num, end=" ")

print_positive_numbers(Mak2001)

#Q24. Program to print negative numbers in a list

Mak2001 = [2,-3,4,5,-6,7]

def print_positive_numbers(Mak2001):

  for num in Mak2001:
    if num < 0:
      print(num, end=" ")

print_positive_numbers(Mak2001)

#Q25. Program to print all positive numbers in a range

start, end = -20, 20
for num in range(start, end + 1):
   if num > 0:
      print(num, end = " ")

#Q26. Program to print all negative numbers in a range

start, end = -20, 20
for num in range(start, end + 1):
   if num < 0:
      print(num, end = " ")

#Q27. Program to count positive and negative numbers in a list

Mak2001 = [-10, 20, -3, 40, 5,]

positive_numbers, negative_numbers = 0, 0

for num in Mak2001:

   if num >= 0:
      positive_numbers += 1
   else:
      negative_numbers += 1

print("Positive numbers : ", positive_numbers)
print("Negative numbers : ", negative_numbers)

#Q28. Remove multiple elements from a list in Python

Mak2001 = [1, 2, 3, 4, 5]
del Mak2001[1:4]
print(Mak2001)

#Q29. Remove empty tuples from a list

Mak2001 = [1, (), 3, (), 5, 6]
res = list(filter(None, Mak2001))
print(str(res))

#Q30. Program to print duplicates from a list of integers

def Repeat(x):
	_size = len(x)
	repeated = []
	for i in range(_size):
		k = i + 1
		for j in range(k, _size):
			if x[i] == x[j] and x[i] not in repeated:
				repeated.append(x[i])
	return repeated

Mak2001 = [10, 20, 30, 10, 50, 20]
print (Repeat(Mak2001))